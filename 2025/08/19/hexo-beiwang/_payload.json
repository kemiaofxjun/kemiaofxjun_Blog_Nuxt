[{"data":1,"prerenderedAt":1269},["ShallowReactive",2],{"/2025/08/19/hexo-beiwang":3,"surround-/2025/08/19/hexo-beiwang":1263},{"id":4,"title":5,"body":6,"categories":1240,"date":1242,"description":1243,"draft":1244,"extension":1245,"image":1246,"meta":1247,"navigation":1248,"path":1249,"readingTime":1250,"recommend":665,"references":1255,"seo":1256,"stem":1257,"tags":1258,"type":1255,"updated":1261,"__hash__":1262},"content/posts/2025/08/19/hexo-beiwang.md","Hexo-备忘",{"type":7,"value":8,"toc":1217},"minimark",[9,14,18,53,57,91,95,107,114,118,128,132,138,142,145,151,157,163,167,170,176,179,183,188,194,204,207,214,220,223,226,250,261,278,290,295,304,313,319,343,351,353,357,361,372,378,381,387,392,398,407,414,422,429,437,440,443,449,452,454,457,468,474,476,486,492,495,501,503,514,520,532,538,541,547,552,558,561,567,569,578,581,587,590,596,602,608,618,626,632,640,642,655,661,663,676,682,684,700,706,711,717,720,726,728,744,750,755,761,763,778,783,791,796,804,809,812,818,823,829,839,845,851,853,865,884,890,893,899,908,914,928,934,939,945,948,950,954,967,974,982,985,990,993,998,1010,1014,1048,1054,1066,1085,1090,1093,1207,1210],[10,11,13],"h1",{"id":12},"hexo-备忘","Hexo 备忘",[15,16,17],"h2",{"id":17},"我的配置",[19,20,21,29,35,41,47],"ol",{},[22,23,24,28],"li",{},[25,26,27],"strong",{},"Hexo 版本",": hexo-cli: 4.3.2, hexo: 7.3.0(当前最新)",[22,30,31,34],{},[25,32,33],{},"Node.js 版本",": 22.16.0",[22,36,37,40],{},[25,38,39],{},"Git 版本",": 2.47.0.sindows.2",[22,42,43,46],{},[25,44,45],{},"PNPM 版本",": 10.12.4",[22,48,49,52],{},[25,50,51],{},"Windows 版本",": 11",[15,54,56],{"id":55},"安装-nodejs","安装 Node.js",[19,58,59,70],{},[22,60,61,62,69],{},"在 ",[63,64,68],"a",{"href":65,"rel":66},"https://nodejs.org/en/download/",[67],"nofollow","官网"," 安装 LTS 版本，电脑一般来说内存足够直接在 C 盘即可，当然，换路径也可以，我反正正常下载换路径，没什么问题。",[22,71,72,73,77,78,81,82,86,87,90],{},"安装完成后，检查是否安装成功。在键盘按下 ",[74,75,76],"kbd",{}," win "," + ",[74,79,80],{}," R "," 键，输入 ",[83,84,85],"code",{},"CMD","，然后回车，打开 CMD 窗口，执行 ",[83,88,89],{},"node -v"," 命令，看到版本信息，则说明安装成功。",[15,92,94],{"id":93},"安装-git","安装 Git",[96,97,61,98,102,103,106],"p",{},[63,99,68],{"href":100,"rel":101},"https://git-scm.com/download/win",[67]," 安装最新版本的 ",[83,104,105],{},"64-bit Git for Windows Setup"," 安装包。",[96,108,109,110,113],{},"安装完成后，在命令行输入 ",[83,111,112],{},"git --version","，如果显示版本号，则说明安装成功。",[115,116,117],"h3",{"id":117},"常用命令",[119,120,126],"pre",{"className":121,"code":123,"language":124,"meta":125},[122],"language-bash","git config -l  //查看所有配置\ngit config --system --list //查看系统配置\ngit config --global --list //查看用户（全局）配置\n","bash","",[83,127,123],{"__ignoreMap":125},[115,129,131],{"id":130},"配置-git-用户名和邮箱","配置 Git 用户名和邮箱",[119,133,136],{"className":134,"code":135,"language":124,"meta":125},[122],"git config --global user.name \"你的用户名\"\ngit config --global user.email \"你的邮箱\"\n",[83,137,135],{"__ignoreMap":125},[15,139,141],{"id":140},"安装-包管理器","安装 包管理器",[96,143,144],{},"安装 npm 为一切的基石，一般来说，你安装了 node，也相当于你安装了 npm，通过一下命令来验证：",[119,146,149],{"className":147,"code":148,"language":124,"meta":125},[122],"npm -v\nnode -v\n",[83,150,148],{"__ignoreMap":125},[96,152,153,156],{},[25,154,155],{},"修改 npm 源","。npm 下载各种模块，默认是从国外服务器下载，速度较慢，建议配置成淘宝镜像。打开 CMD 窗口，运行如下命令:",[119,158,161],{"className":159,"code":160,"language":124,"meta":125},[122],"npm config set registry https://registry.npm.taobao.org\n",[83,162,160],{"__ignoreMap":125},[115,164,166],{"id":165},"安装-pnpm","安装 pnpm",[96,168,169],{},"pnpm 是一个快速、节省磁盘空间的包管理器，类似于 npm 和 yarn。安装 pnpm 可以通过以下命令：",[119,171,174],{"className":172,"code":173,"language":124,"meta":125},[122],"npm install -g pnpm\n",[83,175,173],{"__ignoreMap":125},[96,177,178],{},"为什么选择 pnpm？因为它的安装速度快，依赖管理更高效，且相对于 npm，我使用 npm 容易失败且慢，pnpm 给我的体验更好。",[15,180,182],{"id":181},"安装-hexo","安装 Hexo",[19,184,185],{},[22,186,187],{},"在 Git BASH 输入如下命令安装 Hexo：",[119,189,192],{"className":190,"code":191,"language":124,"meta":125},[122],"pnpm install -g hexo-cli\n",[83,193,191],{"__ignoreMap":125},[19,195,197],{"start":196},2,[22,198,199,200,203],{},"安装完后输入 ",[83,201,202],{},"hexo -v"," 验证是否安装成功。",[205,206],"hr",{},[15,208,210,213],{"id":209},"github配置",[63,211],{"id":212},"github-config","Github配置",[215,216,217],"blockquote",{},[96,218,219],{},"上述操作是前提，接下来是配置 Github。",[96,221,222],{},"注册 github 就不说了，很基础的东西，连我个代码小白都懂就不多说了。",[115,224,225],{"id":225},"创建仓库",[19,227,228,239],{},[22,229,230,231,234,235,238],{},"登录 GitHub，点击右上角的 ",[83,232,233],{},"+"," 号，选择 ",[83,236,237],{},"New repository","。",[22,240,241,242,245,246,249],{},"填写仓库名称，建议使用 ",[83,243,244],{},"\u003Cusername>.github.io"," 格式（例如：",[83,247,248],{},"yourusername.github.io","），这样可以直接作为个人主页。",[96,251,252,253,256,257,260],{},"这里我不准备直接使用常规的 ",[83,254,255],{},"hexo deploy"," 命令来部署到 GitHub Pages，因为当你的文章一多，生成时间就会繁琐，这里的建议是使用 ",[83,258,259],{},"Github Actions"," 来自动部署。",[215,262,263],{},[96,264,265,266,271,272,277],{},"这一部分的教程是源于 ",[63,267,270],{"href":268,"rel":269},"https://akilar.top/posts/f752c86d/",[67],"店长的文章","，但是有点老旧了，于是我做了点更改（这里的图片来源于 ",[63,273,276],{"href":274,"rel":275},"https://blog.anheyu.com/posts/asdx.html",[67],"安知鱼","）：",[19,279,280,287],{},[22,281,282,283,286],{},"首先要创建一个放置源码的私有仓库，以下称之为 ",[83,284,285],{},"hexo-source","，",[22,288,289],{},"然后要生成一个 Github 密钥：",[215,291,292],{},[96,293,294],{},"访问 Github-> 头像（右上角）-> Settings-> Developer Settings-> Personal access tokens-> generate new token, 创建的 Token 名称随意，但必须勾选 repo 项 和 workflows 项。",[96,296,297,298,303],{},"点击 ",[63,299,302],{"href":300,"rel":301},"https://github.com/settings/tokens",[67],"链接"," 前往生成",[96,305,306,310],{},[307,308],"img",{"alt":125,"src":309},"https://img.314926.xyz/images/2025/08/17/jiaoxue1.webp",[307,311],{"alt":125,"src":312},"https://img.314926.xyz/images/2025/08/17/jiaoxue2.webp",[314,315,316],"alert",{},[96,317,318],{},"!!! token 只会显示这一次，之后将无法查看，所以务必保证你已经记录下了 Token。之后如果忘记了就只能重新生成重新配置了。",[19,320,322,340],{"start":321},3,[22,323,61,324,326,327],{},[83,325,285],{}," 仓库中的设置里点击设置 -> action -> General -> 工作流程权限\n",[328,329,330],"ul",{},[22,331,332,333,336,337,238],{},"勾选 ",[83,334,335],{},"Read and write permissions","，并且勾选 ",[83,338,339],{},"Allow \u003Cspan style=\"background:#FF0000;\">\u003C/span>all actions and reusable workflows",[22,341,342],{},"在设置里 -> Secrets and variables -> Actions -> New repository secret 添加",[328,344,345],{},[22,346,347,350],{},[83,348,349],{},"GITHUBTOKEN","：放置你刚才生成的 Token。",[205,352],{},[15,354,356],{"id":355},"上述是前置条件接下来要先部署-hexo你才好继续下一步","上述是前置条件，接下来要先部署 hexo，你才好继续下一步。",[15,358,360],{"id":359},"初始化-hexo","初始化 Hexo",[19,362,363,369],{},[22,364,365,366,238],{},"在本地新建一个文件夹，例如 ",[83,367,368],{},"hexo-solitude",[22,370,371],{},"这里我是用的是 vscode 打开该文件夹，然后在终端输入以下命令来初始化 Hexo：",[119,373,376],{"className":374,"code":375,"language":124,"meta":125},[122],"hexo init (项目名称)\n",[83,377,375],{"__ignoreMap":125},[96,379,380],{},"我一般都不填，直接在文件下下就可以开始，如果你添加了项目名称，那么下一步就是：",[119,382,385],{"className":383,"code":384,"language":124,"meta":125},[122],"cd (项目名称)\n",[83,386,384],{"__ignoreMap":125},[19,388,389],{"start":321},[22,390,391],{},"安装依赖包：",[119,393,396],{"className":394,"code":395,"language":124,"meta":125},[122],"pnpm install\n",[83,397,395],{"__ignoreMap":125},[96,399,400,401,406],{},"然后就是选择你想要的主题，这里我使用的是",[63,402,405],{"href":403,"rel":404},"https://solitude.js.org/cn/getting-started/installation",[67],"Solitude","，具体的配置不细讲，我只讲一部分：",[96,408,409,410,413],{},"首先就是基本的安装，这里还是选择",[83,411,412],{},"git clone","没有别的原因，主要还是会改点源码，不想改的直接pnpm下载即可：",[119,415,420],{"className":416,"code":418,"language":419,"meta":125},[417],"language-git","// git安装\ngit clone -b dev https://github.com/everfu/hexo-theme-solitude.git themes/solitude\n\n// pnpm 安装\npnpm i hexo-theme-solitude\n","git",[83,421,418],{"__ignoreMap":125},[96,423,424,425,428],{},"然后在",[83,426,427],{},"_config.yml","里修改成：",[119,430,435],{"className":431,"code":433,"language":434,"meta":125},[432],"language-yml","theme: solitude\n","yml",[83,436,433],{"__ignoreMap":125},[15,438,439],{"id":439},"配置",[96,441,442],{},"下列代码是我的备忘：",[119,444,447],{"className":445,"code":446,"language":434,"meta":125},[432],"# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: 喵落阁\nsubtitle: '克喵的博客'\ndescription: '愿你看清一切真相后，依旧热爱你的家人和朋友。'\nkeywords: 克喵,kemiao,博客\nauthor: 克喵爱吃卤面\nlanguage: zh-CN\ntimezone: 'Asia/Shanghai'\n\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: # 你的域名\npermalink: posts/:abbrlink.html\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks\n  trailing_html: true # Set to false to remove trailing '.html' from permalinks\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link:\n  enable: true # Open external links in new tab\n  field: site # Apply to the whole site\n  exclude: ''\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nsyntax_highlighter: highlight.js\nhighlight:\n  line_number: false\n  auto_detect: false\n  tab_replace: ''\n  wrap: true\n  hljs: false\nprismjs:\n  preprocess: true\n  line_number: true\n  tab_replace: ''\n\n# Home page setting\n# path: Root path for your blogs index page. (default = '')\n# per_page: Posts displayed per page. (0 = disable pagination)\n# order_by: Posts order. (Order by date descending by default)\nindex_generator:\n  path: ''\n  per_page: 10\n  order_by: -date\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Metadata elements\n## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\nmeta_generator: true\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n## updated_option supports 'mtime', 'date', 'empty'\nupdated_option: 'mtime'\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n\n# Include / Exclude file(s)\n## include:/exclude: options only apply to the 'source/' folder\ninclude: []\nexclude: []\nignore: []\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: solitude\n\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repo: git@github.com-xx:kemiaofxjun/kemiaofxjun.github.io.git\n  branch: main\n\n# RSS Feed 配置\nfeed:\n  type: atom          # 生成 atom.xml\n  path: atom.xml      # 输出文件名\n  limit: 20           # 最多显示文章数 (0=全部)\n  hub:                # PubSubHubbub 中心 (可选)\n  content: true       # 是否包含全文内容 (true=是, false=仅摘要)\n  content_limit: 140  # 摘要长度（当 content=false 时生效）\n  content_limit_delim: ' '  # 截断分隔符\n  order_by: -date     # 按日期倒序排列\n  autodiscovery: true # 在 HTML 头部添加自动发现标签\n\n# 数学公式渲染配置\nmarkdown:\n  preset: 'default' # 使用的 MD 语法，默认使用的 GFM\n  render:\n    html: true # 渲染 html\n    xhtmlOut: false\n    langPrefix: 'language-' # 在代码块的类名中添加前缀（指定语言时）。\n    breaks: true\n    linkify: true # 如果你写了一个链接而不是 [name](link) 方式，会自动识别为链接并渲染。\n    typographer: true # 将替换常见的印刷元素。\n    quotes: '“”‘’' # 替换文章张的 \"\" '' 号\n  enable_rules:\n  disable_rules:\n  plugins: # 使用插件\n  anchors:\n    level: 2 # 渲染标题的级别（h1,h2,h3）\n    collisionSuffix: ''\n    permalink: true\n    permalinkClass: 'headerlink'\n    permalinkSide: 'left'\n    permalinkSymbol: ''\n    case: 0\n    separator: '-'\n  images: # 图片的一些编译\n    lazyload: true # 是否需要渲染 lazyload\n    prepend_root: false\n    post_asset: false\n  inline: false\n\nswpp:\n  # 是否启用插件\n  enable: true\n  # 是否在发布前自动执行脚本\n  auto_exec: true\n  gen_dom: true\n\n# 文章链接转数字或字母：https://github.com/rozbo/hexo-abbrlink\nabbrlink:\n    alg: crc16   #算法： crc16(default) and crc32\n    rep: hex     #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex\n\n# https://github.com/hexojs/hexo-generator-sitemap\nsitemap:\n  path: sitemap.xml\n  rel: false\n  tags: true\n  categories: true\n\nalgolia:\n  appId: \"\"\n  apiKey: \"\"\n  adminApiKey: \"\"\n  chunkSize: 5000\n  indexName: \"index-name\"\n  fields:\n    - content:strip:truncate,0,500\n    - excerpt:strip\n    - gallery\n    - permalink\n    - photos\n    - slug\n    - tags\n    - title\n\n# hexo-safego安全跳转插件\n# see https://blog.liushen.fun/posts/1dfd1f41/\nhexo_safego:\n  # 基本功能设置\n  general:\n    enable: true                # 启用插件\n    enable_base64_encode: true  # 使用 Base64 编码\n    enable_target_blank: true   # 从新窗口打开跳转页面\n\n  # 安全设置\n  security:\n    url_param_name: 'u'         # URL 参数名\n    html_file_name: 'go.html'   # 重定向页面的文件名\n    ignore_attrs:               # 忽略处理的 HTML 结构\n      - 'data-fancybox'\n\n  # 容器与页面设置\n  scope:\n    apply_containers:           # 应用的容器选择器\n      - '#article-container'\n    apply_pages:                # 应用的页面路径\n      - \"/posts/\"\n      - \"/devices/\"\n    exclude_pages:              # 排除的页面路径\n\n  # 域名白名单\n  whitelist:\n    domain_whitelist:           # 允许的白名单域名，通过字符串匹配实现\n      - \"kemeow.top\"\n      - \"kemiaosw.top\"\n      - \"050815.xyz\"\n      - \"314926.xyz\"\n      - \"051531.xyz\"\n\n  # 页面外观设置\n  appearance:\n    avatar: https://img.314926.xyz/images/2025/08/13/no-background-kemiaofxjun.webp   # 跳转页面头像路径\n    title: \"喵洛阁\"            # 跳转页面标题\n    subtitle: \"安全中心\"         # 跳转页面副标题\n    darkmode: auto              # 是否启用深色模式\n    countdowntime: 4            # 跳转页面倒计时秒数，如果设置为负数则为不自动跳转\n\n  # 调试设置\n  debug:\n    enable: false               # 启用调试模式\n\n# 追番插件\n# https://github.com/HCLonely/hexo-bilibili-bangumi\nbangumi: # 追番设置\n  enable: true\n  source: bili\n  path: \n  vmid: 3546643173477234\n  title: \"追番列表\"\n  quote: \"生命不息，追番不止！\"\n  show: 1\n  lazyload: false\n  loading:\n  showMyComment: true\n  pagination: false\n  extra_options:\n    top_img: false\n    lazyload:\n      enable: false\n\n",[83,448,446],{"__ignoreMap":125},[96,450,451],{},"博客的其他修改基本就是来自教程和一些博主的网站。",[205,453],{},[15,455,456],{"id":456},"插件",[19,458,459],{},[22,460,461,464,465],{},[25,462,463],{},"基础依赖"," ",[83,466,467],{},"hexo-renderer-pug",[119,469,472],{"className":470,"code":471,"language":124,"meta":125},[122],"pnpm i hexo-renderer-pug\n",[83,473,471],{"__ignoreMap":125},[205,475],{},[19,477,478],{"start":196},[22,479,480,464,483],{},[25,481,482],{},"字数统计",[83,484,485],{},"hexo-wordcount",[119,487,490],{"className":488,"code":489,"language":124,"meta":125},[122],"pnpm i hexo-wordcount\n",[83,491,489],{"__ignoreMap":125},[96,493,494],{},"配置里修改：",[119,496,499],{"className":497,"code":498,"language":434,"meta":125},[432],"# --------------------------- start ---------------------------\n# Word count\n# 字数统计\n# warning: Please install the hexo-wordcount plugin first.\n# 警告: 请先安装 hexo-wordcount 插件。\nwordcount: false\n# --------------------------- end ---------------------------\n",[83,500,498],{"__ignoreMap":125},[205,502],{},[19,504,505],{"start":321},[22,506,507,510,511],{},[25,508,509],{},"数学公式"," 卸载 ",[83,512,513],{},"hexo-render-marked",[119,515,518],{"className":516,"code":517,"language":124,"meta":125},[122],"npm un hexo-renderer-marked\n",[83,519,517],{"__ignoreMap":125},[96,521,522,523,464,526,464,529],{},"安装 ",[83,524,525],{},"hexo-renderer-markdown-it",[83,527,528],{},"katex",[83,530,531],{},"@renbaoshuo/markdown-it-katex",[119,533,536],{"className":534,"code":535,"language":124,"meta":125},[122],"pnpm i hexo-renderer-markdown-it katex @renbaoshuo/markdown-it-katex\n",[83,537,535],{"__ignoreMap":125},[96,539,540],{},"配置里修改",[119,542,545],{"className":543,"code":544,"language":434,"meta":125},[432],"# --------------------------- start ---------------------------\n# Katex\n# Latex formula support\n# Latex 公式支持\nkatex:\n  enable: false\n  # Whether to load on each page\n  # 是否在每个页面加载\n  per_page: false\n  # Whether to enable copy formula\n  # 是否启用复制公式\n  copytex: false\n# --------------------------- end ---------------------------\n",[83,546,544],{"__ignoreMap":125},[96,548,549,550],{},"添加以下内容到 ",[83,551,427],{},[119,553,556],{"className":554,"code":555,"language":434,"meta":125},[432],"markdown:\n  preset: 'default'\n  render:\n    html: true\n    xhtmlOut: false\n    langPrefix: 'language-'\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  enable_rules:\n  disable_rules:\n  plugins:\n    - '@renbaoshuo/markdown-it-katex'\n  anchors:\n    level: 2\n    collisionSuffix: ''\n    permalink: false\n    permalinkClass: 'header-anchor'\n    permalinkSide: 'left'\n    permalinkSymbol: '¶'\n    case: 0\n    separator: '-'\n  images:\n    lazyload: false\n    prepend_root: false\n    post_asset: false\n  inline: false  # https://markdown-it.github.io/markdown-it/#MarkdownIt.renderInline\n",[83,557,555],{"__ignoreMap":125},[96,559,560],{},"开启配置项",[119,562,565],{"className":563,"code":564,"language":434,"meta":125},[432],"# --------------------------- start ---------------------------\n# Katex\n# Latex formula support\n# Latex 公式支持\nkatex:\n  enable: true\n  # Whether to load on each page\n  # 是否在每个页面加载\n  per_page: true\n  # Whether to enable copy formula\n  # 是否启用复制公式\n  copytex: false\n# --------------------------- end ---------------------------\n\n",[83,566,564],{"__ignoreMap":125},[205,568],{},[19,570,572],{"start":571},4,[22,573,574,577],{},[25,575,576],{},"PWA"," 安装 hexo-swpp 和 swpp-backends 插件",[96,579,580],{},"在博客根目录执行",[119,582,585],{"className":583,"code":584,"language":124,"meta":125},[122],"pnpm i hexo-swpp \n\npnpm i swpp-backends\n",[83,586,584],{"__ignoreMap":125},[96,588,589],{},"开启配置",[119,591,594],{"className":592,"code":593,"language":434,"meta":125},[432],"# 大约在773行\n# --------------------------- start ---------------------------\n# PWA\n# Progressive Web App\npwa:\n  enable: true\n  manifest: /manifest.json # manifest.json\n  theme_color: \"#006a73\" # Theme color\n  mask_icon: /img/pwa/favicon.png # Mask icon\n  apple_touch_icon: /img/pwa/favicon.png # Apple touch icon\n  bookmark_icon: /img/pwa/favicon.png # Bookmark icon\n  favicon_32_32: /img/pwa/favicon_32.png # 32x32 icon\n  favicon_16_16: /img/pwa/favicon_16.png # 16x16 icon\n# --------------------------- end ---------------------------\n\n",[83,595,593],{"__ignoreMap":125},[96,597,598,599,601],{},"在",[83,600,427],{},"里添加swpp配置",[119,603,606],{"className":604,"code":605,"language":434,"meta":125},[432],"swpp:\n  # 是否启用插件\n  enable: true\n  # 是否在发布前自动执行脚本\n  auto_exec: true\n  gen_dom: true\n",[83,607,605],{"__ignoreMap":125},[96,609,61,610,613,614,617],{},[83,611,612],{},"source"," 目录中创建 ",[83,615,616],{},"manifest.json"," 文件",[119,619,624],{"className":620,"code":622,"language":623,"meta":125},[621],"language-json","{\n    \"name\": \"网站名称\",\n    \"short_name\": \"网站名称缩写\",\n    \"theme_color\": \"#006a73\",\n    \"background_color\": \"#006a73\",\n    \"display\": \"fullscreen\",\n    \"scope\": \"/\",\n    \"start_url\": \"/\",\n    \"id\": \"/\",\n    \"icons\": [\n      {\n        \"src\": \"/img/pwa/favicon_16.png\",\n        \"sizes\": \"16x16\",\n        \"type\": \"image/png\",\n        \"purpose\": \"any\"\n      },\n      {\n        \"src\": \"/img/pwa/favicon_16.png\",\n        \"sizes\": \"16x16\",\n        \"type\": \"image/png\",\n        \"purpose\": \"maskable\"\n      },\n      {\n        \"src\": \"/img/pwa/favicon_32.png\",\n        \"sizes\": \"32x32\",\n        \"type\": \"image/png\",\n        \"purpose\": \"any\"\n      },\n      {\n        \"src\": \"/img/pwa/favicon_32.png\",\n        \"sizes\": \"32x32\",\n        \"type\": \"image/png\",\n        \"purpose\": \"maskable\"\n      },\n      {\n        \"src\": \"/img/pwa/favicon.png\",\n        \"sizes\": \"180x180\",\n        \"type\": \"image/png\",\n        \"purpose\": \"any\"\n      },\n      {\n        \"src\": \"/img/pwa/favicon.png\",\n        \"sizes\": \"180x180\",\n        \"type\": \"image/png\",\n        \"purpose\": \"maskable\"\n      }\n    ],\n    \"splash_pages\": null\n}\n\n","json",[83,625,622],{"__ignoreMap":125},[96,627,628,629,617],{},"在博客根目录创建一个 ",[83,630,631],{},"sw-rules.js",[119,633,638],{"className":634,"code":636,"language":637,"meta":125},[635],"language-js","module.exports.config = {\n  /** @type {?ServiceWorkerConfig|boolean} */\n  serviceWorker: {\n    escape: 1,\n    cacheName: 'SolitudeCache',\n    debug: false,\n  },\n  register: {\n    onsuccess: undefined,\n    onerror: () =>\n      console.error(\n        'Service Worker 注册失败！可能是由于您的浏览器不支持该功能！'\n      ),\n    builder: (root, framework, pluginConfig) => {\n      const { onerror, onsuccess } = pluginConfig.register;\n      return `\n            \u003Cscript>\n                (() => {\n                    const sw = navigator.serviceWorker;\n                    const error = ${onerror && onerror.toString()};\n                    if (!sw?.register('${new URL(root).pathname}sw.js')\n                        ${onsuccess ? `?.then(${onsuccess.toString()})` : \"\"}\n                        ?.catch(error)\n                    ) error()\n                })()\n            \u003C/script>`;\n    },\n  },\n  /** @type {?DomConfig|boolean} */\n  dom: {\n    /** @type {?VoidFunction} */\n    onsuccess: () => {\n      caches\n        .match('https://id.v3/')\n        .then((res) => {\n          if (res)\n            res.json().then((json) => {\n              utils &&\n                utils.snackbarShow(\n                  `已刷新缓存，更新为${json.escape + '.' + json.global + '.' + json.local\n                  }版本最新内容`,\n                  false,\n                  2500\n                );\n            });\n          else console.info('未找到缓存');\n        })\n        .catch((error) => console.error('缓存匹配出错', error));\n    },\n  },\n  /** @type {?VersionJsonConfig|boolean} */\n  json: {\n    /** @type {number} */\n    maxHtml: 15,\n    /** @type {number} */\n    charLimit: 1024,\n    /** @type {string[]} */\n    merge: [],\n    exclude: {\n      /** @type {RegExp[]} */\n      localhost: [],\n      /** @type {RegExp[]} */\n      other: [],\n    },\n  },\n  /** @type {?ExternalMonitorConfig|boolean} */\n  external: {\n    /** @type {number} */\n    timeout: 5000,\n    /** 拉取文件时地并发限制 */\n    concurrencyLimit: 100,\n    /** @type {({head: string, tail: string}|function(string):string[])[]} */\n    js: [],\n    /** @type {RegExp[]} */\n    stable: [\n      /^https:\\/\\/npm\\.elemecdn\\.com\\/[^/@]+\\@[^/@]+\\/[^/]+\\/[^/]+$/,\n      /^https:\\/\\/cdn\\.cbd\\.int\\/[^/@]+\\@[^/@]+\\/[^/]+\\/[^/]+$/,\n      /^https:\\/\\/cdn\\.jsdelivr\\.net\\/npm\\/[^/@]+\\@[^/@]+\\/[^/]+\\/[^/]+$/,\n    ],\n    replacer: (srcUrl) => {\n      if (srcUrl.startsWith('https://cdn.jsdelivr.net/npm/')) {\n        const pathname = new URL(srcUrl).pathname;\n        return [\n          srcUrl,\n          `https://cdn.cbd.int/${pathname}`,\n          `https://npm.elemecdn.com/${pathname}`,\n          `https://fastly.jsdelivr.net/npm/${pathname}`,\n        ];\n      } else {\n        return srcUrl;\n      }\n    },\n  },\n};\n\nmodule.exports.cacheRules = {\n  simple: {\n    clean: true,\n    search: false,\n    match: (url, $eject) =>\n      url.host === $eject.domain && ['/404.html'].includes(url.pathname),\n  },\n  cdn: {\n    clean: true,\n    match: (url) =>\n      [\n        'cdn.cbd.int',\n        'lf26-cdn-tos.bytecdntp.com',\n        'lf6-cdn-tos.bytecdntp.com',\n        'lf3-cdn-tos.bytecdntp.com',\n        'lf9-cdn-tos.bytecdntp.com',\n        'cdn.staticfile.org',\n        'npm.elemecdn.com',\n      ].includes(url.host) &&\n      url.pathname.match(/\\.(js|css|woff2|woff|ttf|cur)$/),\n  },\n};\n\nmodule.exports.getSpareUrls = (srcUrl) => {\n  if (srcUrl.startsWith('https://npm.elemecdn.com')) {\n    return {\n      timeout: 3000,\n      list: [\n        srcUrl,\n        `https://fastly.jsdelivr.net/${new URL(srcUrl).pathname}`,\n      ],\n    };\n  }\n};\n\nmodule.exports.ejectValues = (hexo, rules) => {\n  return {\n    domain: {\n      prefix: 'const',\n      value: new URL(hexo.config.url).host,\n    },\n  };\n};\n\nmodule.exports.skipRequest = (request) => request.url.startsWith(\"https://i0.hdslb.com\") ||\n  request.url.startsWith('https://meting.qjqq.cn') ||\n  request.url.startsWith('https://api.i-meto.com');\n","js",[83,639,636],{"__ignoreMap":125},[205,641],{},[19,643,645],{"start":644},5,[22,646,647,654],{},[25,648,649],{},[63,650,653],{"href":651,"rel":652},"https://github.com/hexojs/hexo-deployer-git",[67],"hexo-deploy-git"," 提交到git的插件",[119,656,659],{"className":657,"code":658,"language":124,"meta":125},[122],"pnpm i hexo-deploy-git --save\n",[83,660,658],{"__ignoreMap":125},[205,662],{},[19,664,666],{"start":665},6,[22,667,668,675],{},[25,669,670],{},[63,671,674],{"href":672,"rel":673},"https://github.com/hexojs/hexo-generator-feed",[67],"hexo-generator-feed"," hexo的rss插件",[119,677,680],{"className":678,"code":679,"language":124,"meta":125},[122],"pnpm i hexo-generator-feed --save\n",[83,681,679],{"__ignoreMap":125},[205,683],{},[19,685,687],{"start":686},7,[22,688,689,696,697],{},[25,690,691],{},[63,692,695],{"href":693,"rel":694},"https://github.com/ohroy/hexo-abbrlink",[67],"hexo 的短链接",": ",[83,698,699],{},"hexo-abbrlink",[119,701,704],{"className":702,"code":703,"language":124,"meta":125},[122],"pnpm i hexo-abbrlink --save\n",[83,705,703],{"__ignoreMap":125},[96,707,598,708,710],{},[83,709,427],{},"里修改：",[119,712,715],{"className":713,"code":714,"language":434,"meta":125},[432],"permalink: posts/:abbrlink/ \n# or\npermalink: posts/:abbrlink.html\n",[83,716,714],{"__ignoreMap":125},[96,718,719],{},"添加:",[119,721,724],{"className":722,"code":723,"language":434,"meta":125},[432],"# abbrlink config\nabbrlink:\n  alg: crc32      # Algorithm used to calc abbrlink. Support crc16(default) and crc32\n  rep: hex        # Representation of abbrlink in URLs. Support dec(default) and hex\n  drafts: false   # Whether to generate abbrlink for drafts. (false in default)\n  force: false    # Enable force mode. In this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had an abbrlink. (false in default)\n  writeback: true # Whether to write changes to front-matters back to the actual markdown files. (true in default)\n",[83,725,723],{"__ignoreMap":125},[205,727],{},[19,729,731],{"start":730},8,[22,732,733,740,741],{},[25,734,735],{},[63,736,739],{"href":737,"rel":738},"https://github.com/hexojs/hexo-generator-sitemap",[67],"博客的sitemap"," : ",[83,742,743],{},"hexo-generator-sitemap",[119,745,748],{"className":746,"code":747,"language":124,"meta":125},[122],"pnpm i hexo-generator-sitemap --save\n",[83,749,747],{"__ignoreMap":125},[96,751,598,752,754],{},[83,753,427],{},"里添加配置：",[119,756,759],{"className":757,"code":758,"language":434,"meta":125},[432],"sitemap:\n  path: \n    - sitemap.xml\n    - sitemap.txt\n  template: ./sitemap_template.xml\n  template_txt: ./sitemap_template.txt\n  rel: false\n  tags: true\n  categories: true\n",[83,760,758],{"__ignoreMap":125},[205,762],{},[19,764,766],{"start":765},9,[22,767,768,740,775],{},[63,769,772],{"href":770,"rel":771},"https://www.mebi.me/hexo-with-algolia",[67],[25,773,774],{},"使用algolia搜索",[83,776,777],{},"hexo-algoliasearch",[328,779,780],{},[22,781,782],{},"注册algolia：",[96,784,785,786],{},"注册地址：",[63,787,790],{"href":788,"rel":789},"https://dashboard.algolia.com/users/sign_up",[67],"dashboard.algolia.com/users/sign_up",[328,792,793],{},[22,794,795],{},"创建应用：",[96,797,798,799],{},"注册成功后创建应用：",[63,800,803],{"href":801,"rel":802},"https://dashboard.algolia.com/account/plan/create?from=dashboard",[67],"dashboard.algolia.com/account/plan/create?from=dashboard",[328,805,806],{},[22,807,808],{},"search -> configure -> index添加index_name即可",[96,810,811],{},"在博客执行命令：",[119,813,816],{"className":814,"code":815,"language":124,"meta":125},[122],"pnpm i hexo-algoliasearch --save\n",[83,817,815],{"__ignoreMap":125},[96,819,820,822],{},[83,821,427],{},"里添加",[119,824,827],{"className":825,"code":826,"language":434,"meta":125},[432],"algolia:\n  appId: \"Z7A3XW4R2I\"\n  apiKey: \"12db1ad54372045549ef465881c17e743\"\n  adminApiKey: \"40321c7c207e7f73b63a19aa24c4761b\"\n  chunkSize: 5000\n  indexName: \"my-hexo-blog\"\n  fields:\n    - content:strip:truncate,0,500\n    - excerpt:strip\n    - gallery\n    - permalink\n    - photos\n    - slug\n    - tags\n    - title\n",[83,828,826],{"__ignoreMap":125},[314,830,831],{},[96,832,833],{},[25,834,835,836],{},"!!!配置完成后记得运行 ",[83,837,838],{},"hexo clean",[96,840,598,841,844],{},[83,842,843],{},"hexo g ","后实行下列代码：",[119,846,849],{"className":847,"code":848,"language":124,"meta":125},[122],"hexo algolia\n",[83,850,848],{"__ignoreMap":125},[205,852],{},[19,854,856],{"start":855},10,[22,857,858,859,864],{},"**",[63,860,863],{"href":861,"rel":862},"https://blog.liushen.fun/posts/1dfd1f41/",[67],"hexo-safego","**安全跳转插件",[96,866,867,868,286,871,873,874,876,877,879,880,883],{},"使用该插件之前，需要先安装 ",[83,869,870],{},"cheerio",[83,872,870],{}," 是一个轻量级的库，用于在服务器端快速、灵活地实现 jQuery 核心功能。在 ",[83,875,863],{}," 插件中，",[83,878,870],{}," 被用来解析和操作生成的静态 HTML 内容，类似于在浏览器中使用 jQuery 处理 DOM 元素。这使得插件能够在生成静态页面时，处理和替换外部链接，增强博客的安全性，而不需要在客户端引入 jQuery。Hexo 一般都有这个插件，可以在 ",[83,881,882],{},"node_modules"," 查看，如果没有，请先执行：",[119,885,888],{"className":886,"code":887,"language":124,"meta":125},[122],"pnpm i cheerio --save\n",[83,889,887],{"__ignoreMap":125},[96,891,892],{},"然后即可安装该插件：",[119,894,897],{"className":895,"code":896,"language":124,"meta":125},[122],"pnpm i hexo-safego --save\n",[83,898,896],{"__ignoreMap":125},[96,900,598,901,904,905,907],{},[83,902,903],{},"hexo","根目录的",[83,906,427],{},"文件中添加以下配置：",[119,909,912],{"className":910,"code":911,"language":434,"meta":125},[432],"# hexo-safego安全跳转插件\n# see https://blog.liushen.fun/posts/1dfd1f41/\nhexo_safego:\n  # 基本功能设置\n  general:\n    enable: true                # 启用插件\n    enable_base64_encode: true  # 使用 Base64 编码\n    enable_target_blank: true   # 打开新窗口\n  # 安全设置\n  security:\n    url_param_name: 'u'         # URL 参数名\n    html_file_name: 'go.html'   # 重定向页面的文件名\n    ignore_attrs:               # 忽略处理的 HTML 属性\n      - 'data-fancybox'\n  # 容器与页面设置\n  scope:\n    apply_containers:           # 应用的容器选择器\n      - '#article-container'\n    apply_pages:                # 应用的页面路径\n      - \"/posts/\"\n      - \"/devices/\"\n    exclude_pages:              # 排除的页面路径\n  # 域名白名单\n  whitelist:\n    domain_whitelist:           # 允许的白名单域名\n      - \"qyliu.top\"\n      - \"liushen.fun\"\n  # 页面外观设置\n  appearance:\n    avatar: /info/avatar.ico    # 头像路径\n    title: \"清羽飞扬\"            # 页面标题\n    subtitle: \"安全中心\"         # 页面副标题\n    darkmode: true              # 是否启用深色模式\n    countdowntime: -1           # 倒计时秒数\n  # 调试设置\n  debug:\n    enable: false               # 启用调试模式\n",[83,913,911],{"__ignoreMap":125},[19,915,917],{"start":916},11,[22,918,919,922,923],{},[25,920,921],{},"hexo的追番页面","：",[63,924,927],{"href":925,"rel":926},"https://github.com/HCLonely/hexo-bilibili-bangumi",[67],"hexo-bilibili-bangumi",[119,929,932],{"className":930,"code":931,"language":124,"meta":125},[122],"pnpm i hexo-bilibili-bangumi --save\n",[83,933,931],{"__ignoreMap":125},[96,935,598,936,938],{},[83,937,427],{},"配置：",[119,940,943],{"className":941,"code":942,"language":434,"meta":125},[432],"bangumi: # 追番设置\n  enable: true           # 是否启用\n  source: bili          # 数据源\n  path: bangumis/index.html  # 页面路径\n  vmid:                 # 用户ID\n  title: '追番列表'      # 页面标题\n  quote: '生命不息，追番不止！' # 页面引言\n  show: 1              # 初始显示页面: 0=想看, 1=在看, 2=看过\n  lazyload: true       # 是否启用图片懒加载\n  metaColor:           # meta 信息字体颜色\n  color:               # 简介字体颜色\n  webp: true          # 是否使用 webp 格式图片\n  progress: true      # 是否显示进度条\n  ...\ncinema: # 追剧设置\n  enable: true           # 是否启用\n  source: bili\n  ...\ngame: # 游戏设置，仅支持source: bgmv0\n  enable: true           # 是否启用\n  source: bgmv0\n  ...\n",[83,944,942],{"__ignoreMap":125},[96,946,947],{},"还在更新中。。。",[205,949],{},[15,951,953],{"id":952},"github-action配置","Github action配置",[96,955,956,957,961,962,966],{},"承接",[63,958,960],{"href":959},"#github-config","段落","的继续吧，未来会在",[963,964,965],"del",{},"出","水一期。",[96,968,969,970,973],{},"接下来就是创建一个私有仓库，根据大佬的文章，是为了保护",[25,971,972],{},"Token","，见仁见智。",[96,975,976,977],{},"这个私有仓库的建立是存储Hexo博客代码，如果你要使用",[63,978,981],{"href":979,"rel":980},"https://github.com/Qexo/Qexo",[67],"Qexo",[96,983,984],{},"，这也是必不可少的！",[96,986,987],{},[307,988],{"alt":125,"src":989},"https://img.314926.xyz/images/2025/08/19/hexo-beiwang1.webp",[96,991,992],{},"创建完成后，需要把博客的源码 push 到这里。首先获取远程仓库地址，此处虽然 SSH 和 HTTPS 均可。SSH 在绑定过 ssh key 的设备上无需再输入密码，HTTPS 则需要输入密码，但是 SSH 偶尔会遇到端口占用的情况。请自主选择。",[96,994,995],{},[307,996],{"alt":125,"src":997},"https://img.314926.xyz/images/2025/08/19/hexo-beiwang2.webp",[314,999,1001],{"type":1000},"warning",[96,1002,1003,1004,1006,1007,1009],{},"这里之所以是私有仓库，是因为在接下来的配置中会用到 ",[83,1005,972],{},"，如果 ",[83,1008,972],{}," 被盗用，别人可以肆意操作你的 github 仓库内容，为了避免这一风险，才选择的博客源码闭源。",[115,1011,1013],{"id":1012},"配置-github-action","配置 Github Action",[19,1015,1016],{},[22,1017,598,1018,1021,1022,1025,1026,1029,1030,1032,1033,1036,1037,1039,1040,1043,1044,1047],{},[83,1019,1020],{},"[Blogroot]","新建",[83,1023,1024],{},".github","文件夹,注意开头是有个",[83,1027,1028],{},".","的。然后在",[83,1031,1024],{}," 内新建 ",[83,1034,1035],{},"workflows"," 文件夹，再在 ",[83,1038,1035],{}," 文件夹内新建 ",[83,1041,1042],{},"autodeploy.yml",",在",[83,1045,1046],{},"[Blogroot]/.github/workflows/autodeploy.yml"," 里面输入",[119,1049,1052],{"className":1050,"code":1051,"language":434,"meta":125},[432],"# 当有改动推送到 main 分支时，启动 Action\nname: 自动部署\n\non:\n  push:\n    branches:\n      - main # 自选分支\n\n  release:\n    types:\n      - published\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: 检查分支\n        uses: actions/checkout@v4\n        with:\n          ref: main # 自选分支\n\n      - name: 安装 Node\n        uses: actions/setup-node@v4\n        with:\n          node-version: \"22.x\" # node版本\n\n      - name: 安装 Hexo\n        run: |\n          export TZ='Asia/Shanghai'\n          npm install hexo-cli -g\n          npm install yamljs --save\n\n      - name: 缓存 Hexo\n        uses: actions/cache@v4\n        id: cache\n        with:\n          path: node_modules\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n\n      - name: 安装依赖\n        if: steps.cache.outputs.cache-hit != 'true'\n        run: |\n          npm install --save\n          npm install hexo-algoliasearch --save\n          npm install hexo-bilibili-bangumi --save\n\n      - name: 生成静态文件\n        run: |\n          node ./link.js\n          hexo clean\n          hexo generate\n          hexo bangumi -u\n          hexo algolia\n\n      - name: 部署\n        run: |\n          cd ./public\n          git init -b main\n          git config --global user.name '${{ secrets.GITHUBUSERNAME }}'\n          git config --global user.email '${{ secrets.GITHUBEMAIL }}'\n          git add .\n          git commit -m \"${{ github.event.head_commit.message }} $(date +\"%Z %Y-%m-%d %A %H:%M:%S\") Updated by GitHub Actions\"\n          git push --force --quiet \"https://${{ secrets.GITHUBUSERNAME }}:${{ secrets.GITHUBTOKEN }}@github.com/${{ secrets.GITHUBUSERNAME }}/${{ secrets.GITHUBUSERNAME }}.github.io.git\" main\n",[83,1053,1051],{"__ignoreMap":125},[96,1055,1056,1057,1061,1062,1065],{},"上述代码是来自",[63,1058,1060],{"href":268,"rel":1059},[67],"店长","的修改自用，为什么不用",[63,1063,276],{"href":274,"rel":1064},[67],"的？",[19,1067,1068,1071,1082],{},[22,1069,1070],{},"首先把Token直接放在仓库的文件里还是不太好。",[22,1072,1073,1074,1077,1078,1081],{},"像我这种在本地搞的，推不到仓库里，因为这里的token不能直接上传，我尝试过把",[83,1075,1076],{},"token: ","改成",[83,1079,1080],{},"token: ${{ servets.GH_token }}","，但是依旧有各种问题，相反使用了店长的代码后，就大差不差，询问AI后就得到目前的代码，也就可以正式上传了。（无拉踩的意思）",[22,1083,1084],{},"之后需要自己到仓库的 Settings->Secrets->actions 下添加环境变量，变量名参考脚本中出现的，依次添加。",[96,1086,1087],{},[307,1088],{"alt":125,"src":1089},"https://img.314926.xyz/images/2025/08/19/hexo-beiwang3.webp",[115,1091,1092],{"id":1092},"重新设置远程仓库和分支",[1094,1095,1097,1157],"tab",{":tabs":1096},"[\"🍼第一次使用git管理博客源码\", \"🍾曾经做过git管理源码的操作\"]",[1098,1099,1100,1119,1125,1130,1136,1143,1149],"template",{"v-slot:tab1":125},[19,1101,1102,1113],{},[22,1103,1104,1105,1108,1109,1112],{},"删除或者先把",[83,1106,1107],{},"[Blogroot]/themes/solitude/.git","移动到非博客文件夹目录下,原因是主题文件夹下的",[83,1110,1111],{},".git","文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。",[22,1114,1115,1116,1118],{},"在博客根目录",[83,1117,1020],{},"路径下运行指令:",[119,1120,1123],{"className":1121,"code":1122,"language":124,"meta":125},[122],"git init #初始化\ngit remote add origin git@github.com:[GithubUsername]/[SourceRepo].git #[SourceRepo]为存放源码的github私有仓库\ngit checkout -b master # 切换到master分支，\n#2020年10月后github新建仓库默认分支改为main，注意更改\n# 如果不是，后面的所有设置的分支记得保持一致\n",[83,1124,1122],{"__ignoreMap":125},[19,1126,1127],{"start":321},[22,1128,1129],{},"添加屏蔽项",[119,1131,1134],{"className":1132,"code":1133,"language":124,"meta":125},[122],".DS_Store\nThumbs.db\ndb.json\n*.log\nnode_modules/\npublic/\n.deploy*/\n.deploy_git*/\n.idea\nthemes/solitude/.git\n",[83,1135,1133],{"__ignoreMap":125},[96,1137,1138,1139,1142],{},"如果不是",[83,1140,1141],{},"solitude","主题，记得替换最后一行内容为你自己当前使用的主题。\n4. 之后再运行 git 提交指令，将博客源码提交到 github 上。",[119,1144,1147],{"className":1145,"code":1146,"language":124,"meta":125},[122],"git add .\ngit commit -m \"github action update\"\ngit push origin master\n#2020年10月后github新建仓库默认分支改为main，注意更改\n",[83,1148,1146],{"__ignoreMap":125},[19,1150,1151],{"start":644},[22,1152,1153,1154,1156],{},"此时你的主题文件夹若已经被正常上传，并且你也添加了主题文件夹下的.git 文件夹的屏蔽项。那你可以考虑把第二步移走或删除的",[83,1155,1111],{},"放回来，用作以后升级。（不禁怀疑真的有人会去用这个方式来升级吗）",[1098,1158,1159,1161,1168,1173,1178,1190,1196],{"v-slot:tab2":125},[22,1160,1129],{},[96,1162,1163,1164,1167],{},"因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到 github 上。这样可以显著减少需要提交的文件量和加快提交速度。\n打开",[83,1165,1166],{},"[Blogroot]/.gitignore",",输入以下内容：",[119,1169,1171],{"className":1170,"code":1133,"language":124,"meta":125},[122],[83,1172,1133],{"__ignoreMap":125},[96,1174,1138,1175,1177],{},[83,1176,1141],{},"主题，记得替换最后一行内容为你自己当前使用的主题。",[19,1179,1180],{"start":196},[22,1181,1182,1183,1186,1187,1189],{},"提交源码到私有仓库",[83,1184,1185],{},"[SourceRepo]","\n在博客根目录",[83,1188,1020],{},"下启动终端，使用 git 指令重设仓库地址。这样在新建仓库，我们仍旧可以保留珍贵的 commit history，便于版本回滚。",[119,1191,1194],{"className":1192,"code":1193,"language":124,"meta":125},[122],"git remote rm origin # 删除原有仓库链接\ngit remote add origin git@github.com:[GithubUsername]/[SourceRepo].git #[SourceRepo]为新的存放源码的github私有仓库\ngit checkout -b master # 切换到master分支，\n#2020年10月后github新建仓库默认分支改为main，注意更改\n# 如果不是，后面的所有设置的分支记得保持一致\ngit add .\ngit commit -m \"github action update\"\ngit push origin master\n#2020年10月后github新建仓库默认分支改为main，注意更改\n",[83,1195,1193],{"__ignoreMap":125},[19,1197,1198],{"start":321},[22,1199,1200,1201],{},"可能遇到的 bug\n因为 solitude 主题文件夹下的.git 文件夹的存在，那么主题文件夹会被识别子项目。从而无法被上传到源码仓库。若是遇到添加屏蔽项，但是还是无法正常上传主题文件夹的情况。请先将本地源码中的 themes 文件夹移动到别的目录下。然后 commit 一次。接着将 themes 文件夹移动回来，再 commit 一次。",[314,1202,1204],{"type":1203},"error",[96,1205,1206],{},"要是还不行，那就删了 solitude 主题文件夹下的.git 文件夹，然后再重复上述的 commit 操作。",[10,1208,1209],{"id":1209},"挖坑",[96,1211,1212,1213,1216],{},"大致写到这，未来或许会有",[963,1214,1215],{},"下一章","挖坑？但是目前通用的就到这，然后后续会写Qexo的简单使用方法、solitude的一些配置更改和我踩坑经历吧。",{"title":125,"searchDepth":571,"depth":571,"links":1218},[1219,1220,1221,1225,1228,1229,1232,1233,1234,1235,1236],{"id":17,"depth":196,"text":17},{"id":55,"depth":196,"text":56},{"id":93,"depth":196,"text":94,"children":1222},[1223,1224],{"id":117,"depth":321,"text":117},{"id":130,"depth":321,"text":131},{"id":140,"depth":196,"text":141,"children":1226},[1227],{"id":165,"depth":321,"text":166},{"id":181,"depth":196,"text":182},{"id":209,"depth":196,"text":213,"children":1230},[1231],{"id":225,"depth":321,"text":225},{"id":355,"depth":196,"text":356},{"id":359,"depth":196,"text":360},{"id":439,"depth":196,"text":439},{"id":456,"depth":196,"text":456},{"id":952,"depth":196,"text":953,"children":1237},[1238,1239],{"id":1012,"depth":321,"text":1013},{"id":1092,"depth":321,"text":1092},[1241],"技术分享","2025-08-19 23:25:25","我对于hexo博客的修改的一部分记录。",false,"md","https://img.314926.xyz/images/2025/08/20/hexo-beiwang-topic.webp",{},true,"/2025/08/19/hexo-beiwang",{"text":1251,"minutes":1252,"time":1253,"words":1254},"27 min read",26.275,1576500,5255,null,{"title":5,"description":1243},"posts/2025/08/19/hexo-beiwang",[1259,1260],"教程","Hexo","2025-08-20 9:27:25","jZv7c8wGuKk2kIQ3gY2R9iCv3vMF5AEsYh5v5cAX02Q",[1264,1255],{"title":1265,"path":1266,"stem":1267,"date":1268,"type":1255,"children":-1},"Markdown 强调语法","/2025/07/17/markdown-qiangdiao","posts/2025/07/17/markdown-qiangdiao","2025-07-17 21:40:50",1756211677329]